{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/eugeneansah/workspace/mi_challenge_reacjs/src/Visualize.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { axios } from \"./axios\";\nimport { Scatter } from \"react-chartjs-2\";\nexport default function Visualize() {\n  _s();\n\n  //   const [visualise, setVisualise] = useState([]);\n  let dropOffData = [];\n  let data1 = [{\n    x: 13.406305710121323,\n    y: 52.54096873175922\n  }, {\n    x: 13.4446535030306,\n    y: 52.545381856568476\n  }, {\n    x: 13.365558432116691,\n    y: 52.53337051722053\n  }, {\n    x: 13.466694041753325,\n    y: 52.559273663322855\n  }, {\n    x: 13.42080856393584,\n    y: 52.53317402906312\n  }, {\n    x: 13.493951208041736,\n    y: 52.541230104140276\n  }, {\n    x: 13.407925477070265,\n    y: 52.53687031832495\n  }, {\n    x: 13.348366070903975,\n    y: 52.56227123652007\n  }, {\n    x: 13.480702976887098,\n    y: 52.55322588554682\n  }, {\n    x: 13.378158414242595,\n    y: 52.55323771239874\n  }];\n  let popularPointData = {};\n\n  function getVisualise() {\n    let data = {};\n    axios.get(\"/\").then(response => {\n      if (response.data) {\n        let obj = JSON.parse(response.data.most_popular_dropoff_points);\n        console.log(obj);\n        obj.features.forEach(feature => {\n          data = {\n            x: feature.geometry.coordinates[0],\n            y: feature.geometry.coordinates[1]\n          };\n          dropOffData.push(data);\n        }); // console.log(dropOffData);\n        // console.log(obj.features[0].properties.name);\n        // console.log(obj.features[0].geometry.coordinates);\n        //   console.log(response.data.most_popular_dropoff_points.geometry);\n\n        popularPointData = {\n          labels: [\"Scatter\"],\n          datasets: [{\n            label: \"My First dataset\",\n            fill: false,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#000000\",\n            pointBorderWidth: 5,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: data1\n          }, {\n            label: \"My First dataset\",\n            fill: true,\n            backgroundColor: \"rgba(98,220,43,0.4)\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#2345678\",\n            pointBorderWidth: 15,\n            pointHoverRadius: 65,\n            pointHoverBackgroundColor: \"rgba(23,986,12,1)\",\n            pointHoverBorderColor: \"rgba(110,90,20,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 1,\n            data: [// { x: 13.406305710121323, y: 52.54096873175922 },\n              // { x: 13.4446535030306, y: 52.545381856568476 },\n              // { x: 13.365558432116691, y: 52.53337051722053 },\n              // { x: 13.466694041753325, y: 52.559273663322855 },\n              // { x: 13.42080856393584, y: 52.53317402906312 },\n              // { x: 13.493951208041736, y: 52.541230104140276 },\n              // { x: 13.407925477070265, y: 52.53687031832495 },\n              // { x: 13.348366070903975, y: 52.56227123652007 },\n              // { x: 13.480702976887098, y: 52.55322588554682 },\n              // { x: 13.378158414242595, y: 52.55323771239874 }\n            ]\n          }]\n        };\n      }\n    }).catch(err => console.log(\"Error\", err)); // console.log(response.data.most_popular_dropoff_points);\n  }\n\n  useEffect(() => {\n    getVisualise();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getVisualise,\n      children: \"Simulate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Visualize, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Visualize;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visualize\");","map":{"version":3,"sources":["/Users/eugeneansah/workspace/mi_challenge_reacjs/src/Visualize.js"],"names":["React","useEffect","axios","Scatter","Visualize","dropOffData","data1","x","y","popularPointData","getVisualise","data","get","then","response","obj","JSON","parse","most_popular_dropoff_points","console","log","features","forEach","feature","geometry","coordinates","push","labels","datasets","label","fill","backgroundColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","catch","err"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { axios } from \"./axios\";\nimport { Scatter } from \"react-chartjs-2\";\n\nexport default function Visualize() {\n  //   const [visualise, setVisualise] = useState([]);\n  let dropOffData = [];\n  let data1 = [\n    { x: 13.406305710121323, y: 52.54096873175922 },\n    { x: 13.4446535030306, y: 52.545381856568476 },\n    { x: 13.365558432116691, y: 52.53337051722053 },\n    { x: 13.466694041753325, y: 52.559273663322855 },\n    { x: 13.42080856393584, y: 52.53317402906312 },\n    { x: 13.493951208041736, y: 52.541230104140276 },\n    { x: 13.407925477070265, y: 52.53687031832495 },\n    { x: 13.348366070903975, y: 52.56227123652007 },\n    { x: 13.480702976887098, y: 52.55322588554682 },\n    { x: 13.378158414242595, y: 52.55323771239874 }\n  ];\n  let popularPointData = {};\n  function getVisualise() {\n    let data = {};\n    axios\n      .get(\"/\")\n      .then(response => {\n        if (response.data) {\n          let obj = JSON.parse(response.data.most_popular_dropoff_points);\n          console.log(obj);\n          obj.features.forEach(feature => {\n            data = {\n              x: feature.geometry.coordinates[0],\n              y: feature.geometry.coordinates[1]\n            };\n            dropOffData.push(data);\n          });\n          // console.log(dropOffData);\n          // console.log(obj.features[0].properties.name);\n          // console.log(obj.features[0].geometry.coordinates);\n          //   console.log(response.data.most_popular_dropoff_points.geometry);\n\n          popularPointData = {\n            labels: [\"Scatter\"],\n            datasets: [\n              {\n                label: \"My First dataset\",\n                fill: false,\n                backgroundColor: \"rgba(75,192,192,0.4)\",\n                pointBorderColor: \"rgba(75,192,192,1)\",\n                pointBackgroundColor: \"#000000\",\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: data1\n              },\n              {\n                label: \"My First dataset\",\n                fill: true,\n                backgroundColor: \"rgba(98,220,43,0.4)\",\n                pointBorderColor: \"rgba(75,192,192,1)\",\n                pointBackgroundColor: \"#2345678\",\n                pointBorderWidth: 15,\n                pointHoverRadius: 65,\n                pointHoverBackgroundColor: \"rgba(23,986,12,1)\",\n                pointHoverBorderColor: \"rgba(110,90,20,1)\",\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 1,\n                data: [\n                  // { x: 13.406305710121323, y: 52.54096873175922 },\n                  // { x: 13.4446535030306, y: 52.545381856568476 },\n                  // { x: 13.365558432116691, y: 52.53337051722053 },\n                  // { x: 13.466694041753325, y: 52.559273663322855 },\n                  // { x: 13.42080856393584, y: 52.53317402906312 },\n                  // { x: 13.493951208041736, y: 52.541230104140276 },\n                  // { x: 13.407925477070265, y: 52.53687031832495 },\n                  // { x: 13.348366070903975, y: 52.56227123652007 },\n                  // { x: 13.480702976887098, y: 52.55322588554682 },\n                  // { x: 13.378158414242595, y: 52.55323771239874 }\n                ]\n              }\n            ]\n          };\n        }\n      })\n      .catch(err => console.log(\"Error\", err));\n    // console.log(response.data.most_popular_dropoff_points);\n  }\n\n  useEffect(() => {\n    getVisualise();\n  }, []);\n  return (\n    <div>\n      <button onClick={getVisualise}>Simulate</button>\n\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}