{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/eugeneansah/workspace/mi_challenge_reacjs/src/Visualize.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { axios } from \"./axios\";\nimport ScatterChart from \"./ScatterChart\";\nexport default function Visualize() {\n  _s();\n\n  //   const [visualise, setVisualise] = useState([]);\n  let dropOffData = [];\n  let data1 = [];\n  let scatterData = {};\n\n  function getVisualise() {\n    let data = {};\n    axios.get(\"/\").then(response => {\n      if (response.data) {\n        let obj = JSON.parse(response.data.most_popular_dropoff_points);\n        console.log(obj);\n        scatterData = response.data;\n        obj.features.forEach(feature => {\n          data = {\n            x: feature.geometry.coordinates[0],\n            y: feature.geometry.coordinates[1]\n          };\n          dropOffData.push(data);\n        }); // console.log(dropOffData);\n        // console.log(obj.features[0].properties.name);\n        // console.log(obj.features[0].geometry.coordinates);\n        //   console.log(response.data.most_popular_dropoff_points.geometry);\n      }\n    }).catch(err => console.log(\"Error\", err)); // console.log(response.data.most_popular_dropoff_points);\n  }\n\n  useEffect(() => {\n    getVisualise();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getVisualise,\n      children: \"Simulate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScatterChart, {\n      data: scatterData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Visualize, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Visualize;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visualize\");","map":{"version":3,"sources":["/Users/eugeneansah/workspace/mi_challenge_reacjs/src/Visualize.js"],"names":["React","useEffect","axios","ScatterChart","Visualize","dropOffData","data1","scatterData","getVisualise","data","get","then","response","obj","JSON","parse","most_popular_dropoff_points","console","log","features","forEach","feature","x","geometry","coordinates","y","push","catch","err"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,WAASC,YAAT,GAAwB;AACtB,QAAIC,IAAI,GAAG,EAAX;AACAP,IAAAA,KAAK,CACFQ,GADH,CACO,GADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACH,IAAb,EAAmB;AACjB,YAAII,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACH,IAAT,CAAcO,2BAAzB,CAAV;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAN,QAAAA,WAAW,GAAGK,QAAQ,CAACH,IAAvB;AACAI,QAAAA,GAAG,CAACM,QAAJ,CAAaC,OAAb,CAAqBC,OAAO,IAAI;AAC9BZ,UAAAA,IAAI,GAAG;AACLa,YAAAA,CAAC,EAAED,OAAO,CAACE,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CADE;AAELC,YAAAA,CAAC,EAAEJ,OAAO,CAACE,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B;AAFE,WAAP;AAIAnB,UAAAA,WAAW,CAACqB,IAAZ,CAAiBjB,IAAjB;AACD,SAND,EAJiB,CAWjB;AACA;AACA;AACA;AACD;AAEF,KApBH,EAqBGkB,KArBH,CAqBSC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBU,GAArB,CArBhB,EAFsB,CAwBtB;AACD;;AAED3B,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEA,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAzCuBH,S;;KAAAA,S","sourcesContent":["import React, { useEffect } from \"react\";\nimport { axios } from \"./axios\";\nimport ScatterChart from \"./ScatterChart\"; \n\nexport default function Visualize() {\n  //   const [visualise, setVisualise] = useState([]);\n  let dropOffData = [];\n  let data1 = [ ];\n  let scatterData = {};\n  function getVisualise() {\n    let data = {}; \n    axios\n      .get(\"/\")\n      .then(response => {\n        if (response.data) {\n          let obj = JSON.parse(response.data.most_popular_dropoff_points);\n          console.log(obj);\n          scatterData = response.data;\n          obj.features.forEach(feature => {\n            data = {\n              x: feature.geometry.coordinates[0],\n              y: feature.geometry.coordinates[1]\n            };\n            dropOffData.push(data);\n          });\n          // console.log(dropOffData);\n          // console.log(obj.features[0].properties.name);\n          // console.log(obj.features[0].geometry.coordinates);\n          //   console.log(response.data.most_popular_dropoff_points.geometry);\n        }\n   \n      })\n      .catch(err => console.log(\"Error\", err));\n    // console.log(response.data.most_popular_dropoff_points);\n  }\n\n  useEffect(() => {\n    getVisualise();\n  }, []);\n  return (\n    <div>\n      <button onClick={getVisualise}>Simulate</button>\n      <ScatterChart data={scatterData} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}