{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/eugeneansah/workspace/mi_challenge_reacjs/src/Visualize.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { axios } from \"./axios\";\nimport { Scatter } from \"react-chartjs-2\";\nexport default function Visualize() {\n  _s();\n\n  //   const [visualise, setVisualise] = useState([]);\n  const getVisualise = async () => {\n    let data = {};\n    const response = await axios.get(\"/\").catch(err => console.log(\"Error\", err)); // console.log(response.data.most_popular_dropoff_points);\n\n    if (response.data) {\n      let obj = JSON.parse(response.data.most_popular_dropoff_points);\n      obj.features.forEach(feature => {\n        data = {\n          x: feature.geometry.coordinates[0],\n          y: feature.geometry.coordinates[1]\n        };\n        dropOffData.push(data);\n      });\n      console.log(dropOffData); // console.log(obj.features[0].properties.name);\n      // console.log(obj.features[0].geometry.coordinates);\n      //   console.log(response.data.most_popular_dropoff_points.geometry);\n    }\n  };\n\n  useEffect(() => {\n    getVisualise();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getVisualise,\n      children: \"Simulate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n      data: popularPointData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Visualize, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Visualize;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visualize\");","map":{"version":3,"sources":["/Users/eugeneansah/workspace/mi_challenge_reacjs/src/Visualize.js"],"names":["React","useEffect","axios","Scatter","Visualize","getVisualise","data","response","get","catch","err","console","log","obj","JSON","parse","most_popular_dropoff_points","features","forEach","feature","x","geometry","coordinates","y","dropOffData","push","popularPointData"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC;AAEA,QAAMC,YAAY,GAAG,YAAY;AAC/B,QAAIC,IAAI,GAAG,EAAX;AACA,UAAMC,QAAQ,GAAG,MAAML,KAAK,CACzBM,GADoB,CAChB,GADgB,EAEpBC,KAFoB,CAEdC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CAFO,CAAvB,CAF+B,CAK/B;;AACA,QAAIH,QAAQ,CAACD,IAAb,EAAmB;AACjB,UAAIO,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWR,QAAQ,CAACD,IAAT,CAAcU,2BAAzB,CAAV;AACAH,MAAAA,GAAG,CAACI,QAAJ,CAAaC,OAAb,CAAqBC,OAAO,IAAI;AAC9Bb,QAAAA,IAAI,GAAG;AACLc,UAAAA,CAAC,EAAED,OAAO,CAACE,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CADE;AAELC,UAAAA,CAAC,EAAEJ,OAAO,CAACE,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B;AAFE,SAAP;AAIAE,QAAAA,WAAW,CAACC,IAAZ,CAAiBnB,IAAjB;AACD,OAND;AAOAK,MAAAA,OAAO,CAACC,GAAR,CAAYY,WAAZ,EATiB,CAUjB;AACA;AACA;AACD;AACF,GApBD;;AAsBAvB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEA,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEqB;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnCuBtB,S;;KAAAA,S","sourcesContent":["import React, { useEffect } from \"react\";\nimport { axios } from \"./axios\";\nimport { Scatter } from \"react-chartjs-2\";\n\nexport default function Visualize() {\n  //   const [visualise, setVisualise] = useState([]);\n \n  const getVisualise = async () => {\n    let data = {};\n    const response = await axios\n      .get(\"/\")\n      .catch(err => console.log(\"Error\", err));\n    // console.log(response.data.most_popular_dropoff_points);\n    if (response.data) {\n      let obj = JSON.parse(response.data.most_popular_dropoff_points);\n      obj.features.forEach(feature => {\n        data = {\n          x: feature.geometry.coordinates[0],\n          y: feature.geometry.coordinates[1]\n        };\n        dropOffData.push(data);\n      });\n      console.log(dropOffData);\n      // console.log(obj.features[0].properties.name);\n      // console.log(obj.features[0].geometry.coordinates);\n      //   console.log(response.data.most_popular_dropoff_points.geometry);\n    }\n  };\n  \n  useEffect(() => {\n    getVisualise();\n  }, []);\n  return (\n    <div>\n      <button onClick={getVisualise}>Simulate</button>\n\n      <Scatter data={popularPointData} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}