{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/eugeneansah/workspace/mi_challenge_reacjs/src/Visualize.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { axios } from \"./axios\";\nimport { Scatter } from \"react-chartjs-2\";\nexport default function Visualize() {\n  _s();\n\n  //   const [visualise, setVisualise] = useState([]);\n  const getVisualise = async () => {\n    let data = {};\n    const response = await axios.get(\"/\").catch(err => console.log(\"Error\", err)); // console.log(response.data.most_popular_dropoff_points);\n\n    if (response.data) {\n      let obj = JSON.parse(response.data.most_popular_dropoff_points);\n      obj.features.forEach(feature => {\n        data = {\n          x: feature.geometry.coordinates[0],\n          y: feature.geometry.coordinates[1]\n        };\n        dropOffData.push(data);\n      });\n      console.log(dropOffData); // console.log(obj.features[0].properties.name);\n      // console.log(obj.features[0].geometry.coordinates);\n      //   console.log(response.data.most_popular_dropoff_points.geometry);\n    }\n  };\n\n  let dropOffData = [];\n  let data1 = [{\n    x: 13.406305710121323,\n    y: 52.54096873175922\n  }, {\n    x: 13.4446535030306,\n    y: 52.545381856568476\n  }, {\n    x: 13.365558432116691,\n    y: 52.53337051722053\n  }, {\n    x: 13.466694041753325,\n    y: 52.559273663322855\n  }, {\n    x: 13.42080856393584,\n    y: 52.53317402906312\n  }, {\n    x: 13.493951208041736,\n    y: 52.541230104140276\n  }, {\n    x: 13.407925477070265,\n    y: 52.53687031832495\n  }, {\n    x: 13.348366070903975,\n    y: 52.56227123652007\n  }, {\n    x: 13.480702976887098,\n    y: 52.55322588554682\n  }, {\n    x: 13.378158414242595,\n    y: 52.55323771239874\n  }];\n  const popularPointData = {\n    labels: [\"Scatter\"],\n    datasets: [{\n      label: \"My First dataset\",\n      fill: false,\n      backgroundColor: \"rgba(75,192,192,0.4)\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#000000\",\n      pointBorderWidth: 5,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [{\n        x: 13.406305710121323,\n        y: 52.54096873175922\n      }, {\n        x: 13.4446535030306,\n        y: 52.545381856568476\n      }, {\n        x: 13.365558432116691,\n        y: 52.53337051722053\n      }, {\n        x: 13.466694041753325,\n        y: 52.559273663322855\n      }, {\n        x: 13.42080856393584,\n        y: 52.53317402906312\n      }, {\n        x: 13.493951208041736,\n        y: 52.541230104140276\n      }, {\n        x: 13.407925477070265,\n        y: 52.53687031832495\n      }]\n    }, {\n      label: \"My First dataset\",\n      fill: true,\n      backgroundColor: \"rgba(98,220,43,0.4)\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#2345678\",\n      pointBorderWidth: 15,\n      pointHoverRadius: 65,\n      pointHoverBackgroundColor: \"rgba(23,986,12,1)\",\n      pointHoverBorderColor: \"rgba(110,90,20,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 1,\n      data: [{\n        x: 13.406305710121323,\n        y: 52.54096873175922\n      }, {\n        x: 13.4446535030306,\n        y: 52.545381856568476\n      }, {\n        x: 13.365558432116691,\n        y: 52.53337051722053\n      }, {\n        x: 13.466694041753325,\n        y: 52.559273663322855\n      }, {\n        x: 13.42080856393584,\n        y: 52.53317402906312\n      }, {\n        x: 13.493951208041736,\n        y: 52.541230104140276\n      }, {\n        x: 13.407925477070265,\n        y: 52.53687031832495\n      }, {\n        x: 13.348366070903975,\n        y: 52.56227123652007\n      }, {\n        x: 13.480702976887098,\n        y: 52.55322588554682\n      }, {\n        x: 13.378158414242595,\n        y: 52.55323771239874\n      }]\n    }]\n  };\n  useEffect(() => {\n    getVisualise();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getVisualise,\n      children: \"Simulate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n      data: popularPointData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Visualize, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Visualize;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visualize\");","map":{"version":3,"sources":["/Users/eugeneansah/workspace/mi_challenge_reacjs/src/Visualize.js"],"names":["React","useEffect","axios","Scatter","Visualize","getVisualise","data","response","get","catch","err","console","log","obj","JSON","parse","most_popular_dropoff_points","features","forEach","feature","x","geometry","coordinates","y","dropOffData","push","data1","popularPointData","labels","datasets","label","fill","backgroundColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { axios } from \"./axios\";\nimport { Scatter } from \"react-chartjs-2\";\n\nexport default function Visualize() {\n  //   const [visualise, setVisualise] = useState([]);\n\n  const getVisualise = async () => {\n    let data = {};\n    const response = await axios\n      .get(\"/\")\n      .catch(err => console.log(\"Error\", err));\n    // console.log(response.data.most_popular_dropoff_points);\n    if (response.data) {\n      let obj = JSON.parse(response.data.most_popular_dropoff_points);\n      obj.features.forEach(feature => {\n        data = {\n          x: feature.geometry.coordinates[0],\n          y: feature.geometry.coordinates[1]\n        };\n        dropOffData.push(data);\n      });\n      console.log(dropOffData);\n      // console.log(obj.features[0].properties.name);\n      // console.log(obj.features[0].geometry.coordinates);\n      //   console.log(response.data.most_popular_dropoff_points.geometry);\n    }\n  };\n  let dropOffData = [];\n  let data1 =[\n    { x: 13.406305710121323, y: 52.54096873175922 },\n    { x: 13.4446535030306, y: 52.545381856568476 },\n    { x: 13.365558432116691, y: 52.53337051722053 },\n    { x: 13.466694041753325, y: 52.559273663322855 },\n    { x: 13.42080856393584, y: 52.53317402906312 },\n    { x: 13.493951208041736, y: 52.541230104140276 },\n    { x: 13.407925477070265, y: 52.53687031832495 },\n    { x: 13.348366070903975, y: 52.56227123652007 },\n    { x: 13.480702976887098, y: 52.55322588554682 },\n    { x: 13.378158414242595, y: 52.55323771239874 }\n  ]\n  const popularPointData = {\n    labels: [\"Scatter\"],\n    datasets: [\n      {\n        label: \"My First dataset\",\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#000000\",\n        pointBorderWidth: 5,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [\n          { x: 13.406305710121323, y: 52.54096873175922 },\n          { x: 13.4446535030306, y: 52.545381856568476 },\n          { x: 13.365558432116691, y: 52.53337051722053 },\n          { x: 13.466694041753325, y: 52.559273663322855 },\n          { x: 13.42080856393584, y: 52.53317402906312 },\n          { x: 13.493951208041736, y: 52.541230104140276 },\n          { x: 13.407925477070265, y: 52.53687031832495 }\n        ]\n      },\n      {\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: \"rgba(98,220,43,0.4)\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#2345678\",\n        pointBorderWidth: 15,\n        pointHoverRadius: 65,\n        pointHoverBackgroundColor: \"rgba(23,986,12,1)\",\n        pointHoverBorderColor: \"rgba(110,90,20,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 1,\n        data: [\n          { x: 13.406305710121323, y: 52.54096873175922 },\n          { x: 13.4446535030306, y: 52.545381856568476 },\n          { x: 13.365558432116691, y: 52.53337051722053 },\n          { x: 13.466694041753325, y: 52.559273663322855 },\n          { x: 13.42080856393584, y: 52.53317402906312 },\n          { x: 13.493951208041736, y: 52.541230104140276 },\n          { x: 13.407925477070265, y: 52.53687031832495 },\n          { x: 13.348366070903975, y: 52.56227123652007 },\n          { x: 13.480702976887098, y: 52.55322588554682 },\n          { x: 13.378158414242595, y: 52.55323771239874 }\n        ]\n      }\n    ]\n  };\n  useEffect(() => {\n    getVisualise();\n  }, []);\n  return (\n    <div>\n      <button onClick={getVisualise}>Simulate</button>\n\n      <Scatter data={popularPointData} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}